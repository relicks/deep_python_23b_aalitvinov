[tool.poetry]
name = "hw3"
version = "0.1.0"
description = ""
authors = ["Alexander Litvinov <axndr.litvinov@gmail.com>"]
readme = "README.md"
packages = [{ include = "custom_list.py" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"

[tool.poetry.group.dev.dependencies]
invoke = "^2.2.0"
ipykernel = "^6.25.2"
pytest = "^7.4.2"
pre-commit = "^3.4.0"
mypy = "^1.5.1"
pylint = "^2.17.5"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
isort = "^5.12.0"
flake8 = "^6.1.0"
flake8-pyproject = "^1.2.3"
ruff = "^0.0.292"
black = { extras = ["jupyter"], version = "^23.9.1" }
typing-extensions = "^4.8.0"
hypothesis = { extras = ["cli"], version = "^6.87.3" }
numpy = "^1.26.0"

[tool.flake8]
extend-ignore = ["E203"]
max-line-length = 88
count = true

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
known_first_party = ["custom_list"]

[tool.pylint.master]
disable = "too-few-public-methods"

[tool.pylint.format]
max-line-length = "88"

[tool.ruff]
src = ["src", "tests"]
line-length = 88
target-version = "py310"
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "UP", # pyupgrade
    # "D",   # pydocstyle
    "I",   # isort
    "PL",  # pylint
    "RUF", # ruff-specific
    "N",   # pep8-naming
    "C4",  # flake8-comprehensions
    "B",   # flake8-bugbear
    "PT",  # flake8-pytest-style
]
ignore = [
    "RUF001", # ambiguous cyrillic letters
    "RUF002", # ambiguous cyrillic letters
]

[tool.ruff.per-file-ignores]
"test_custom_list.py" = ["RUF005"]

[tool.ruff.isort]
known-first-party = ["custom_list"]

[tool.pytest.ini_options]
# pythonpath = ["src"]
addopts = ["--import-mode=importlib"]

[tool.coverage.report]
omit = ["./.venv/*", "tasks.py", "test_custom_list.py"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
