[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"

[tool.pylint.format]
max-line-length = "88"

[tool.ruff]
src = ["src", "tests"]
line-length = 88
target-version = "py311"
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "UP", # pyupgrade
    # "D",   # pydocstyle
    "I",   # isort
    "PL",  # pylint
    "RUF", # ruff-specific
    "N",   # pep8-naming
    "C4",  # flake8-comprehensions
    "B",   # flake8-bugbear
    "PT",  # flake8-pytest-style
]
ignore = [
    "RUF001", # ambiguous cyrillic letters
    "RUF002", # ambiguous cyrillic letters
]

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = ["--import-mode=importlib"]
markers = [
    "return_value(Any): used to pass return values to mock.patch in fixtures.",
]

[tool.poetry]
name = "homework-02"
version = "0.1.0"
description = ""
authors = ["Alexander Litvinov <axndr.litvinov@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "3.11.*"
orjson = "^3.9.7"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.4.0"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
flake8 = "^6.1.0"
pylint = "^3.0.0"
black = {extras = ["jupyter"], version = "^23.9.1"}
mypy = "^1.5.1"
faker = "^19.6.2"
factory-boy = "^3.3.0"
ipykernel = "^6.25.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
